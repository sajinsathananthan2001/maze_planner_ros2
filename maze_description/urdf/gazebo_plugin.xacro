<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="maze">
    

  <!-- Gazebo plugin for ROS Control -->
  <gazebo>

      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
          <robotNamespace>/</robotNamespace>
      </plugin>

  </gazebo>


  <xacro:macro name="set_wheel_friction" params="link friction">
    <gazebo reference="${link}">
      <material>Gazebo/Black</material>
      <mu1 value="${friction}"/>
      <mu2 value="${friction}"/>
      <kp value="10000000.0"/>
      <kd value="1"/>
      <minDepth>0.001</minDepth>
      <fdir1>0 0 0</fdir1>
      <max_vel>0.5</max_vel>
    </gazebo>
  </xacro:macro>
    
  <xacro:macro name="set_castor_joint_friction" params="link friction">
    <gazebo reference="${link}">
      <mu1 value="${friction}"/>
      <mu2 value="${friction}"/>
    </gazebo>
  </xacro:macro>


<!-- friction for drive wheels -->
<xacro:set_wheel_friction link="left_wheel_link" friction="1"/>
<xacro:set_wheel_friction link="right_wheel_link" friction="1"/>

<!-- friction for caster wheels -->
<xacro:set_wheel_friction link="front_right_castor_link" friction="100000"/>
<xacro:set_wheel_friction link="back_right_castor_link" friction="100000"/>
<xacro:set_wheel_friction link="front_left_castor_link" friction="100000"/>
<xacro:set_wheel_friction link="back_left_castor_link" friction="100000"/>

<!-- friction for caster handle -->
<xacro:set_castor_joint_friction link="front_right_holder_link" friction="100"/>
<xacro:set_castor_joint_friction link="back_right_holder_link" friction="100"/>
<xacro:set_castor_joint_friction link="front_left_holder_link" friction="100"/>
<xacro:set_castor_joint_friction link="back_left_holder_link" friction="100"/>


  <gazebo reference="imu_link">
    <material>Gazebo/Grey</material>
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <update_rate>100.0</update_rate>
      <visualize>true</visualize>
    </sensor>
  </gazebo>


<!-- front lidar link -->
  <!-- <gazebo reference="back_lidar_link">
    <sensor name="laser" type="ray">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray> 
        <scan>
            <horizontal>
                <samples>360</samples>
                <min_angle>-1.65806</min_angle>
                <max_angle>1.65806</max_angle>
            </horizontal>
        </scan>
        <range>
            <min>0.05</min>
            <max>12</max>
        </range>
      </ray>
      <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
            <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>back_lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo> -->


<!-- back lidar link -->
  <!-- <gazebo reference="back_lidar_link">
    <sensor name="laser" type="ray">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray> 
        <scan>
            <horizontal>
                <samples>360</samples>
                <min_angle>-1.65806</min_angle>
                <max_angle>1.65806</max_angle>
            </horizontal>
        </scan>
        <range>
            <min>0.05</min>
            <max>12</max>
        </range>
      </ray>
      <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
            <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>back_lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo> -->

<!-- <gazebo reference="right_camera">
    <sensor name="right_camera" type="depth">
        <always_on>true</always_on>
        <update_rate>30</update_rate>
        <pose>0 0 0 0 0 0</pose>
        <camera name="right_camera">
            <horizontal_fov>1.46608</horizontal_fov>
            <image>
                <width>640</width>
                <height>480</height>
                <format>B8G8R8</format>
            </image>
            <clip>
                <near>0.05</near>
                <far>8</far>
            </clip>
        </camera>
        <plugin name="right_camera_intel_realsense_d430_depth_driver" filename="libgazebo_ros_camera.so">
            <ros>
                <namespace>/right_camera</namespace>
                <remapping>right_camera/image_raw:=color/image_raw</remapping>
                <remapping>right_camera/depth/image_raw:=depth/image_rect_raw</remapping>
                <remapping>right_camera/camera_info:=camera_info</remapping>
                <remapping>right_camera/depth/camera_info:=depth/camera_info</remapping>
                <remapping>right_camera/points:=depth/points</remapping>
            </ros>
            <camera_name>right_camera</camera_name>
            <frame_name>right_camera_frame</frame_name>
            <hack_baseline>0.07</hack_baseline>
            <min_depth>0.05</min_depth>
            <max_depth>8.0</max_depth>
        </plugin>
    </sensor>
</gazebo> -->

<!-- <gazebo reference="left_camera">
    <sensor name="left_camera" type="depth">
        <always_on>true</always_on>
        <update_rate>30</update_rate>
        <pose>0 0 0 0 0 0</pose>
        <camera name="left_camera">
            <horizontal_fov>1.46608</horizontal_fov>
            <image>
                <width>640</width>
                <height>480</height>
                <format>B8G8R8</format>
            </image>
            <clip>
                <near>0.05</near>
                <far>8</far>
            </clip>
        </camera>
        <plugin name="left_camera_intel_realsense_d430_depth_driver" filename="libgazebo_ros_camera.so">
            <ros>
                <namespace>/left_camera</namespace>
                <remapping>left_camera/image_raw:=color/image_raw</remapping>
                <remapping>left_camera/depth/image_raw:=depth/image_rect_raw</remapping>
                <remapping>left_camera/camera_info:=camera_info</remapping>
                <remapping>left_camera/depth/camera_info:=depth/camera_info</remapping>
                <remapping>left_camera/points:=depth/points</remapping>
            </ros>
            <camera_name>left_camera</camera_name>
            <frame_name>left_camera_frame</frame_name>
            <hack_baseline>0.07</hack_baseline>
            <min_depth>0.05</min_depth>
            <max_depth>8.0</max_depth>
        </plugin>
    </sensor>
</gazebo> -->


  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>false</visualize>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
            <argument>~/out:=imu</argument>
        </ros>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>


  <gazebo>
    <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">

      <ros>
        <namespace></namespace>
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>odom:=odom</remapping>
      </ros>

      <update_rate>30</update_rate>

      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>

      <wheel_separation>0.44</wheel_separation>
      <wheel_diameter>0.2</wheel_diameter>

      <max_wheel_torque>200</max_wheel_torque>
      <max_wheel_acceleration>6.0</max_wheel_acceleration>

      <command_topic>cmd_vel</command_topic>

      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>

    <plugin name="robot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>10</update_rate>
      <joint_name>left_wheel_joint</joint_name>
      <joint_name>right_wheel_joint</joint_name>
      <joint_name>back_right_castor_joint</joint_name>
      <joint_name>front_right_castor_joint</joint_name>
      <joint_name>back_left_castor_joint</joint_name>
      <joint_name>front_left_castor_joint</joint_name>
      <joint_name>back_right_holder_joint</joint_name>
      <joint_name>back_left_holder_joint</joint_name>
      <joint_name>front_right_holder_joint</joint_name>
      <joint_name>front_left_holder_joint</joint_name>
    </plugin>      

</gazebo>



</robot>